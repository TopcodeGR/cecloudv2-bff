scheme=http
hostname=${CECLOUDV2_HOSTNAME}

reverse-proxy-port=7080
reverse-proxy-uri=${scheme}://${hostname}:${reverse-proxy-port}

authorization-server-prefix=/auth
issuer=${reverse-proxy-uri}${authorization-server-prefix}

client-id=${CECLOUDV2_CLIENT_ID}
client-secret=${CECLOUDV2_CLIENT_SECRET}

username-claim-json-path=${CECLOUDV2_USERNAME_CLAIM_JSON_PATH}
authorities-json-path=${CECLOUDV2_AUTHORITIES_JSON_PATH}

bff-port=7081
bff-prefix=/bff

resource-server-port=4003

audience=

server.port=${bff-port}

spring.cloud.gateway.routes[0].id=bff
spring.cloud.gateway.routes[0].uri=${scheme}://${hostname}:${resource-server-port}
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/**
spring.cloud.gateway.routes[0].filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.routes[0].filters[1]=TokenRelay=
spring.cloud.gateway.routes[0].filters[2]=SaveSession
spring.cloud.gateway.routes[0].filters[3]=StripPrefix=1
spring.cloud.gateway.routes[1].id=bff-swagger-v3-api-docs
spring.cloud.gateway.routes[1].uri=${scheme}://${hostname}:${resource-server-port}
spring.cloud.gateway.routes[1].predicates[0]=Path=/v3/api-docs/**
spring.cloud.gateway.routes[2].id=bff-swagger-ui
spring.cloud.gateway.routes[2].uri=${scheme}://${hostname}:${resource-server-port}
spring.cloud.gateway.routes[2].predicates[0]=Path=/swagger-ui/**

spring.security.oauth2.client.provider.token-generator.issuer-uri=${issuer}
spring.security.oauth2.client.registration.token-generator.provider=${CECLOUDV2_SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_TOKEN_GENERATOR_PROVIDER}
spring.security.oauth2.client.registration.token-generator.authorization-grant-type=${CECLOUDV2_SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_TOKEN_GENERATOR_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.token-generator.client-id=${client-id}
spring.security.oauth2.client.registration.token-generator.client-secret=${client-secret}
spring.security.oauth2.client.registration.token-generator.scope=${CECLOUDV2_SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_TOKEN_SCOPE}

trace=true
logging.level.org.springframework.security.oauth2=TRACE

oidc.client.client-uri=${reverse-proxy-uri}${bff-prefix}
oidc.client.security-matchers[0]=/api/**
oidc.client.security-matchers[1]=/login/**
oidc.client.security-matchers[2]=/oauth2/**
oidc.client.security-matchers[3]=/logout
oidc.client.permit-all[0]=/api/**
oidc.client.permit-all[1]=/login/**
oidc.client.permit-all[2]=/oauth2/**
oidc.client.csrf=cookie-accessible-from-js
oidc.client.oauth2-redirections.rp-initiated-logout=ACCEPTED

oidc.resource-server.permit-all[0]=/error
oidc.resource-server.permit-all[1]=/actuator/health/readiness
oidc.resource-server.permit-all[2]=/actuator/health/liveness

oidc.ops[0].iss=${issuer}
oidc.ops[0].authorities[0].path=${authorities-json-path}
oidc.ops[0].aud=${audience}